/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package core.v;

import java.awt.Graphics;
import java.awt.image.BufferedImage;

/**
 *
 * @author Mateusz
 */
public class ImagePanel extends javax.swing.JPanel {

    private BufferedImage _image;

    /**
     * Creates new form ImagePanel
     */
    public ImagePanel() {
        _image = null;
        initComponents();
    }

    public void setImage(BufferedImage image) {
        _image = image;
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); //To change body of generated methods, choose Tools | Templates.
        if (_image != null) {
            double scaleX = (_image.getWidth()*1.) / getWidth();
            double scaleY = (_image.getHeight()*1.) / getHeight();
            
            int x;
            int y;
            int width;
            int height;

            if (scaleX < 1 && scaleY < 1) {
                x = (getWidth() - _image.getWidth()) / 2;
                y = (getHeight() - _image.getHeight()) / 2;
                width = _image.getWidth();
                height = _image.getHeight();
            } else {
                if (scaleX > scaleY) {
                    x = (int) ((getWidth() - _image.getWidth() / scaleX) / 2);
                    y = (int) ((getHeight() - _image.getHeight() / scaleX) / 2);
                    width = (int) (_image.getWidth() / scaleX);
                    height = (int) (_image.getHeight() / scaleX);
                } else {
                    x = (int) ((getWidth() - _image.getWidth() / scaleY) / 2);
                    y = (int) ((getHeight() - _image.getHeight() / scaleY) / 2);
                    width = (int) (_image.getWidth() / scaleY);
                    height = (int) (_image.getHeight() / scaleY);
                }
            }
            
            
            //System.out.println("scaleX = " + scaleX + " | scaleY = " + scaleY + " | x = " + x + " | y = " + y + " | width = " + width + " | height = " + height);

            g.drawImage(_image, x, y, width, height, null);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 396, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 296, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
